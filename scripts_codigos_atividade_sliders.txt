

//exemplo_slider1: Controlador de temperatura. Dependendo da temperatura, o tempo pode
//estar muito frio, frio, clima agrad√°vel, est√° ficando quente e calor extremo.

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Slider de Temperatura',
      theme: ThemeData(primarySwatch: Colors.red),
      home: const TemperatureSelector(),
    );
  }
}

class TemperatureSelector extends StatefulWidget {
  const TemperatureSelector({super.key});

  @override
  State<TemperatureSelector> createState() => _TemperatureSelectorState();
}

class _TemperatureSelectorState extends State<TemperatureSelector> {
  double _temperature = 20; // Valor inicial (em graus Celsius)

   //site para pegar emojis: https://getemoji.com/

  String getTemperatureMessage(double temp) {
    if (temp < 0) {
      return 'Est√° muito frio! ü•∂';
    } else if (temp < 15) {
      return 'Frio, mas suport√°vel! üß•';
    } else if (temp < 25) {
      return 'Clima agrad√°vel! üòä';
    } else if (temp < 35) {
      return 'Est√° ficando quente! üåû';
    } else {
      return 'Calor extremo! ü•µ';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Controle de Temperatura'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Selecione a Temperatura (¬∞C):',
              style: TextStyle(fontSize: 20),
            ),
            Slider(
              value: _temperature,
              min: -10,
              max: 50,
              divisions: 60,
              label: '${_temperature.round()}¬∞C',
              onChanged: (value) {
                setState(() {
                  _temperature = value;
                });
              },
            ),
            Text(
              '${_temperature.round()}¬∞C',
              style: const TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 20),
            Text(
              getTemperatureMessage(_temperature),
              textAlign: TextAlign.center,
              style: const TextStyle(fontSize: 18, fontStyle: FontStyle.italic),
            ),
          ],
        ),
      ),
    );
  }
}

//exemplo_slider2: No novo contexto, podemos imaginar o ajuste de brilho e contraste de uma tela.
// Ao aumentar o brilho (barra de Slider 1), o contraste (barra de Slider 2) diminui proporcionalmente para evitar
// que a imagem fique muito saturada ou desbalanceada. 
// Da mesma forma, se o brilho for reduzido, o contraste aumenta para manter a qualidade visual.

import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {

    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Slider para ajuste de Brilho e Contraste',
      home: SliderExample(),
    );
  }
}

class SliderExample extends StatefulWidget {
  const SliderExample({super.key});

  @override
  State<SliderExample> createState() => _SliderExampleState();
}

class _SliderExampleState extends State<SliderExample> {
  double _brightness = 0.5;
  double _contrast = 0.5;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Ajuste de Brilho e Contraste')),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Text(
            'Brilho: ${(_brightness * 100).toInt()}%',
            style: const TextStyle(fontSize: 18),
          ),
          Slider(
            value: _brightness,
            min: 0,
            max: 1,
            divisions: 100,
            label: (_brightness * 100).toStringAsFixed(0),
            onChanged: (double value) {
              setState(() {
                _brightness = value;
                _contrast =
                    1 - value; // O contraste √© ajustado automaticamente.
              });
            },
          ),
          Text(
            'Contraste: ${(_contrast * 100).toInt()}%',
            style: const TextStyle(fontSize: 18),
          ),
          Slider(
            value: _contrast,
            min: 0,
            max: 1,
            divisions: 100,
            label: (_contrast * 100).toStringAsFixed(0),
            onChanged: (double value) {
              setState(() {
                _contrast = value;
                _brightness = 1 - value; // O brilho √© ajustado automaticamente.
              });
            },
          ),
        ],
      ),
    );
  }
}

//

//exemplo_bonus: Dependendo da idade, a pessoa pode tirar o titulo de eleitor, mas √© facultativo votar (16 - 17 anos), 
//deve tirar o titulo de eleitor e votar (voto obrigat√≥rio: 18 anos at√© 69 anos), ou ent√£o seu voto, a partir de certa idade, 
//passa a ser facultativo (70 anos ou mais). Logo, conforme a idade do eleitor selecionada na barra de Slider, uma mensagem
//espec√≠fica ser√° impressa em tela.

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Slider de Idade',
      theme: ThemeData(primarySwatch: Colors.green),
      home: const AgeSelector(),
    );
  }
}

class AgeSelector extends StatefulWidget {
  const AgeSelector({super.key});

  @override
  State<AgeSelector> createState() => _AgeSelectorState();
}

class _AgeSelectorState extends State<AgeSelector> {
  double _age = 18; // Idade inicial

  String _actionMessage = 'Selecione sua idade para ver uma a√ß√£o.';

  void _performAction(double age) {
    setState(() {
      if (age <= 15) {
        _actionMessage = 'Voc√™ tem ${age.round()} anos. Aproveite a inf√¢ncia/juventude!';
      } else if (age > 15 && age < 18) {
        _actionMessage = 'Voc√™ tem ${age.round()} anos. T√≠tulo de eleitor pode ser tirado, mas o voto √© facultativo!';
      } else if (age >= 18 && age < 70) {
        _actionMessage = 'Voc√™ tem ${age.round()} anos. T√≠tulo de eleitor obrigat√≥rio, voc√™ deve votar!';
      } else {
        _actionMessage = 'Voc√™ tem ${age.round()} anos. Seu voto √© facultativo!';
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Sele√ß√£o de Idade'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Selecione sua idade:', style: TextStyle(fontSize: 20)),
            Slider(
              value: _age,
              min: 0,
              max: 100,
              divisions: 100,
              label: _age.round().toString(),
              onChanged: (value) {
                setState(() {
                  _age = value;
                });
              },
              onChangeEnd: (value) {
                _performAction(value);
              },
            ),
            Text(
              'Idade selecionada: ${_age.round()} anos',
              style: const TextStyle(fontSize: 18),
            ),
            const SizedBox(height: 20),
            Text(
              _actionMessage,
              style: const TextStyle(fontSize: 18, fontStyle: FontStyle.italic),
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }
}

//
